{"ast":null,"code":"var _jsxFileName = \"/srv/http/Gallery-Template/src/Components/Elements/Dropdown/Dropdown.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\"; // import styles of this component\n\nimport styles from \"./Dropdown.module.css\"; // import other react pkg to use\n\nimport { ArrowUp3 } from \"iconsax-react\";\nimport { PropTypes } from 'prop-types'; // import other component to use\n\nimport Button from \"../Button/Button\"; // Dropdown Component\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dropdown = _ref => {\n  _s();\n\n  let {\n    items,\n    title,\n    liftingDdTextUp\n  } = _ref;\n  const [ddTitle, setDdTitle] = useState(title);\n  const [ddItemsState, setDdItem] = useState(items);\n\n  const ddItem = (ddId, ev) => {\n    const ddTitle = ev.target.innerHTML;\n    activeDropDownItem(ddId);\n    setDdTitle(ddTitle);\n    liftingDdTextUp && liftingDdTextUp(ddTitle);\n  };\n\n  const activeDropDownItem = dropdownItemId => {\n    setDdItem(prev => {\n      prev.forEach(item => item.active = false);\n      const myDd = prev.find(ddId => ddId.id === dropdownItemId);\n      myDd.active = true;\n      return [...prev];\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles[\"dropdown\"],\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      theme: \"transparent\",\n      className: \"flex align-items-center\",\n      children: [ddTitle, /*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles[\"dropdown-arrow-icon\"],\n        children: /*#__PURE__*/_jsxDEV(ArrowUp3, {\n          color: \"var(--green-400)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: styles[\"dropdown-menu\"],\n      children: ddItemsState.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: `${styles[\"dropdown-item-menu\"]} ${item.active && styles.active}`,\n        onClick: ev => ddItem(item.id, ev),\n        children: item.title\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}; // validate dropdown component props\n\n\n_s(Dropdown, \"jiwVW3dJtJ+CzjSK9RaqVGfGdv0=\");\n\n_c = Dropdown;\nDropdown.propTypes = {\n  items: PropTypes.array,\n  title: PropTypes.string,\n  liftingDdTextUp: PropTypes.func\n};\nexport default Dropdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dropdown\");","map":{"version":3,"sources":["/srv/http/Gallery-Template/src/Components/Elements/Dropdown/Dropdown.jsx"],"names":["useState","styles","ArrowUp3","PropTypes","Button","Dropdown","items","title","liftingDdTextUp","ddTitle","setDdTitle","ddItemsState","setDdItem","ddItem","ddId","ev","target","innerHTML","activeDropDownItem","dropdownItemId","prev","forEach","item","active","myDd","find","id","map","propTypes","array","string","func"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,uBAAnB,C,CAEA;;AACA,SAASC,QAAT,QAAyB,eAAzB;AACA,SAASC,SAAT,QAA0B,YAA1B,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,kBAAnB,C,CAEA;;;;AACA,MAAMC,QAAQ,GAAG,QAAuC;AAAA;;AAAA,MAAtC;AAAEC,IAAAA,KAAF;AAASC,IAAAA,KAAT;AAAgBC,IAAAA;AAAhB,GAAsC;AACtD,QAAM,CAAEC,OAAF,EAAWC,UAAX,IAA0BV,QAAQ,CAACO,KAAD,CAAxC;AACA,QAAM,CAACI,YAAD,EAAeC,SAAf,IAA4BZ,QAAQ,CAACM,KAAD,CAA1C;;AAEA,QAAMO,MAAM,GAAG,CAACC,IAAD,EAAOC,EAAP,KAAc;AAC3B,UAAMN,OAAO,GAAGM,EAAE,CAACC,MAAH,CAAUC,SAA1B;AACAC,IAAAA,kBAAkB,CAACJ,IAAD,CAAlB;AACAJ,IAAAA,UAAU,CAACD,OAAD,CAAV;AACAD,IAAAA,eAAe,IAAIA,eAAe,CAACC,OAAD,CAAlC;AACD,GALD;;AAOA,QAAMS,kBAAkB,GAAIC,cAAD,IAAoB;AAC7CP,IAAAA,SAAS,CAACQ,IAAI,IAAI;AAChBA,MAAAA,IAAI,CAACC,OAAL,CAAaC,IAAI,IAAIA,IAAI,CAACC,MAAL,GAAc,KAAnC;AACA,YAAMC,IAAI,GAAGJ,IAAI,CAACK,IAAL,CAAUX,IAAI,IAAIA,IAAI,CAACY,EAAL,KAAYP,cAA9B,CAAb;AACAK,MAAAA,IAAI,CAACD,MAAL,GAAc,IAAd;AACA,aAAO,CAAE,GAAGH,IAAL,CAAP;AACD,KALQ,CAAT;AAMD,GAPD;;AASA,sBACE;AAAK,IAAA,SAAS,EAAEnB,MAAM,CAAC,UAAD,CAAtB;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,aAAd;AAA4B,MAAA,SAAS,EAAC,yBAAtC;AAAA,iBACIQ,OADJ,eAEE;AAAM,QAAA,SAAS,EAAER,MAAM,CAAC,qBAAD,CAAvB;AAAA,+BACE,QAAC,QAAD;AAAU,UAAA,KAAK,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAOE;AAAI,MAAA,SAAS,EAAEA,MAAM,CAAC,eAAD,CAArB;AAAA,gBACGU,YAAY,CAACgB,GAAb,CAAiBL,IAAI,iBACpB;AAEE,QAAA,SAAS,EAAG,GAAErB,MAAM,CAAC,oBAAD,CAAuB,IAAGqB,IAAI,CAACC,MAAL,IAAetB,MAAM,CAACsB,MAAO,EAF7E;AAGE,QAAA,OAAO,EAAGR,EAAD,IAAQF,MAAM,CAACS,IAAI,CAACI,EAAN,EAAUX,EAAV,CAHzB;AAAA,kBAIMO,IAAI,CAACf;AAJX,SACOe,IAAI,CAACI,EADZ;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CAxCD,C,CA0CA;;;GA1CMrB,Q;;KAAAA,Q;AA2CNA,QAAQ,CAACuB,SAAT,GAAsB;AACpBtB,EAAAA,KAAK,EAAEH,SAAS,CAAC0B,KADG;AAEpBtB,EAAAA,KAAK,EAAEJ,SAAS,CAAC2B,MAFG;AAGpBtB,EAAAA,eAAe,EAAEL,SAAS,CAAC4B;AAHP,CAAtB;AAMA,eAAe1B,QAAf","sourcesContent":["import { useState } from \"react\"\n\n// import styles of this component\nimport styles from \"./Dropdown.module.css\"\n\n// import other react pkg to use\nimport { ArrowUp3 } from \"iconsax-react\"\nimport { PropTypes } from 'prop-types';\n\n// import other component to use\nimport Button from \"../Button/Button\"\n\n// Dropdown Component\nconst Dropdown = ({ items, title, liftingDdTextUp }) => {\n  const [ ddTitle, setDdTitle ] = useState(title)\n  const [ddItemsState, setDdItem] = useState(items)\n\n  const ddItem = (ddId, ev) => {\n    const ddTitle = ev.target.innerHTML\n    activeDropDownItem(ddId)\n    setDdTitle(ddTitle)\n    liftingDdTextUp && liftingDdTextUp(ddTitle)\n  }\n    \n  const activeDropDownItem = (dropdownItemId) => {\n    setDdItem(prev => {\n      prev.forEach(item => item.active = false)\n      const myDd = prev.find(ddId => ddId.id === dropdownItemId)\n      myDd.active = true\n      return [ ...prev ]\n    })\n  }\n\n  return (\n    <div className={styles[\"dropdown\"]}>\n      <Button theme=\"transparent\" className=\"flex align-items-center\">\n        { ddTitle }\n        <span className={styles[\"dropdown-arrow-icon\"]}>\n          <ArrowUp3 color=\"var(--green-400)\" />\n        </span>\n      </Button>\n      <ul className={styles[\"dropdown-menu\"]}>\n        {ddItemsState.map(item => (\n          <li \n            key={item.id}\n            className={`${styles[\"dropdown-item-menu\"]} ${item.active && styles.active}`}\n            onClick={(ev) => ddItem(item.id, ev)}>\n              { item.title }\n          </li>\n        ))}\n      </ul>\n    </div>\n  )\n}\n\n// validate dropdown component props\nDropdown.propTypes  = {\n  items: PropTypes.array,\n  title: PropTypes.string,\n  liftingDdTextUp: PropTypes.func\n}\n\nexport default Dropdown"]},"metadata":{},"sourceType":"module"}