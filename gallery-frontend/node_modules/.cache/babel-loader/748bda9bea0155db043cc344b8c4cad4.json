{"ast":null,"code":"var _jsxFileName = \"/srv/http/capnews/gallery-frontend/src/App.js\";\n// import other components to use\nimport Header from './Components/Header/Header';\nimport { AuthProvider } from \"react-oidc-context\";\nimport { BrowserRouter, Route, Router, Routes } from \"react-router-dom\";\nimport Index from \"./Layouts/Index\";\nimport { Toaster } from 'react-hot-toast';\nimport { UserManager } from 'oidc-client'; // App component\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  const oidcConfig = {\n    authority: \"http://keycloak:8080/auth/realms/my_realm/\",\n    client_id: \"frontend_client\",\n    redirect_uri: \"http://localhost:3000/signin-callback.html\",\n    response_type: 'code',\n    scope: \"openid profile message.read\"\n  };\n  const userManager = new UserManager({ ...oidcConfig,\n    userStore: new WebStorageStateStore({\n      store: window.localStorage\n    })\n  });\n\n  const updateProfile = async () => {\n    try {\n      const user = await userManager.getUser();\n\n      if (!user) {\n        // User not logged in\n        return;\n      } // Create a new user object with updated profile information\n\n\n      const updatedUser = { ...user.profile,\n        firstName: 'John',\n        lastName: 'Doe',\n        email: 'john.doe@example.com'\n      }; // Update the user's profile information\n\n      await userManager.updateUser(updatedUser);\n      console.log('Profile updated successfully');\n    } catch (error) {\n      console.log('Error updating profile: ', error);\n    }\n  };\n\n  updateProfile();\n  return /*#__PURE__*/_jsxDEV(AuthProvider, { ...oidcConfig,\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: [/*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/explore\",\n          element: /*#__PURE__*/_jsxDEV(Index, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 53\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Toaster, {\n        position: \"top-center\",\n        reverseOrder: false,\n        gutter: 8,\n        containerClassName: \"\",\n        containerStyle: {},\n        toastOptions: {\n          // Define default options\n          className: '',\n          duration: 5000,\n          style: {\n            background: '#363636',\n            color: '#fff',\n            textAlign: \"center\"\n          },\n          // Default options for specific types\n          success: {\n            duration: 9000,\n            theme: {\n              primary: 'green',\n              secondary: 'black'\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/srv/http/capnews/gallery-frontend/src/App.js"],"names":["Header","AuthProvider","BrowserRouter","Route","Router","Routes","Index","Toaster","UserManager","App","oidcConfig","authority","client_id","redirect_uri","response_type","scope","userManager","userStore","WebStorageStateStore","store","window","localStorage","updateProfile","user","getUser","updatedUser","profile","firstName","lastName","email","updateUser","console","log","error","className","duration","style","background","color","textAlign","success","theme","primary","secondary"],"mappings":"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","sourcesContent":["// import other components to use\nimport Header from './Components/Header/Header';\n\nimport { AuthProvider } from \"react-oidc-context\";\nimport { BrowserRouter, Route, Router, Routes } from \"react-router-dom\";\nimport Index from \"./Layouts/Index\";\nimport { Toaster } from 'react-hot-toast';\nimport { UserManager } from 'oidc-client';\n\n\n// App component\nconst App = () => {\n\n    const oidcConfig = {\n        authority: \"http://keycloak:8080/auth/realms/my_realm/\",\n        client_id: \"frontend_client\",\n        redirect_uri: \"http://localhost:3000/signin-callback.html\",\n        response_type: 'code',\n        scope: \"openid profile message.read\",\n    };\n\n    const userManager = new UserManager({\n        ...oidcConfig,\n        userStore: new WebStorageStateStore({ store: window.localStorage }),\n    });\n    const updateProfile = async () => {\n        try {\n            const user = await userManager.getUser();\n            if (!user) {\n                // User not logged in\n                return;\n            }\n\n            // Create a new user object with updated profile information\n            const updatedUser = {\n                ...user.profile,\n                firstName: 'John',\n                lastName: 'Doe',\n                email: 'john.doe@example.com',\n            };\n\n            // Update the user's profile information\n            await userManager.updateUser(updatedUser);\n\n            console.log('Profile updated successfully');\n        } catch (error) {\n            console.log('Error updating profile: ', error);\n        }\n    };\n\n    updateProfile();\n\n\n\n    return (\n        <AuthProvider {...oidcConfig}>\n            <BrowserRouter>\n                <Routes>\n                    <Route path=\"/\" element={<Header />} />\n                    <Route path=\"/explore\" element={<Index />} />\n                </Routes>\n                <Toaster\n                    position=\"top-center\"\n                    reverseOrder={false}\n                    gutter={8}\n                    containerClassName=\"\"\n                    containerStyle={{}}\n                    toastOptions={{\n                        // Define default options\n                        className: '',\n                        duration: 5000,\n                        style: {\n                            background: '#363636',\n                            color: '#fff',\n                            textAlign: \"center\"\n                        },\n\n                        // Default options for specific types\n                        success: {\n                            duration: 9000,\n                            theme: {\n                                primary: 'green',\n                                secondary: 'black',\n                            },\n                        },\n                    }}\n                />\n\n            </BrowserRouter>\n        </AuthProvider>\n    )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}