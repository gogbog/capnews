{"ast":null,"code":"var _jsxFileName = \"/srv/http/gallery-frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\"; // import styles of this component\n\nimport styles from \"./App.module.css\"; // import other components to use\n\nimport Header from './Components/Header/Header';\nimport MasonryLayout from './Components/MasonryLayout/MasonryLayout';\nimport ContainerCard from './Components/ContainerCard/ContainerCard';\nimport Dropdown from './Components/Elements/Dropdown/Dropdown'; // import json files \n\nimport images from \"./Jsons/Images.json\";\nimport { AuthProvider } from \"react-oidc-context\";\nimport { BrowserRouter, Route, Router, Routes } from \"react-router-dom\";\nimport Index from \"./Layouts/Index\"; // App component\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const oidcConfig = {\n    authority: \"http://keycloak:8080/auth/realms/my_realm/\",\n    client_id: \"frontend_client\",\n    redirect_uri: \"http://localhost:3000/signin-callback.html\",\n    response_type: 'code',\n    scope: \"openid profile message.read\"\n  };\n  const [categoryImage, setCategoryImage] = useState(images.categories.all);\n\n  const takeDdTitle = ddTitle => {\n    setCategoryImage(() => {\n      let categoryChoose = Object.keys(images.categories).filter(item => {\n        const titleSplited = ddTitle.toLowerCase().split(\" \")[0];\n        return item.toLowerCase().includes(titleSplited);\n      });\n      return [...images.categories[categoryChoose]];\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthProvider, { ...oidcConfig,\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/explore\",\n          element: /*#__PURE__*/_jsxDEV(Index, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 53\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"R0soc4jPMaNFaNGVFnucfHBolVk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/srv/http/gallery-frontend/src/App.js"],"names":["useState","styles","Header","MasonryLayout","ContainerCard","Dropdown","images","AuthProvider","BrowserRouter","Route","Router","Routes","Index","App","oidcConfig","authority","client_id","redirect_uri","response_type","scope","categoryImage","setCategoryImage","categories","all","takeDdTitle","ddTitle","categoryChoose","Object","keys","filter","item","titleSplited","toLowerCase","split","includes"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,kBAAnB,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,aAAP,MAA0B,0CAA1B;AACA,OAAOC,aAAP,MAA0B,0CAA1B;AACA,OAAOC,QAAP,MAAqB,yCAArB,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,YAAT,QAA6B,oBAA7B;AACA,SAASC,aAAT,EAAwBC,KAAxB,EAA+BC,MAA/B,EAAuCC,MAAvC,QAAqD,kBAArD;AACA,OAAOC,KAAP,MAAkB,iBAAlB,C,CAGA;;;;AACA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEd,QAAMC,UAAU,GAAG;AACfC,IAAAA,SAAS,EAAE,4CADI;AAEfC,IAAAA,SAAS,EAAE,iBAFI;AAGfC,IAAAA,YAAY,EAAE,4CAHC;AAIfC,IAAAA,aAAa,EAAE,MAJA;AAKfC,IAAAA,KAAK,EAAE;AALQ,GAAnB;AASA,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCrB,QAAQ,CAACM,MAAM,CAACgB,UAAP,CAAkBC,GAAnB,CAAlD;;AAEA,QAAMC,WAAW,GAAIC,OAAD,IAAa;AAC7BJ,IAAAA,gBAAgB,CAAC,MAAM;AACnB,UAAIK,cAAc,GAAGC,MAAM,CAACC,IAAP,CAAYtB,MAAM,CAACgB,UAAnB,EAA+BO,MAA/B,CAAsCC,IAAI,IAAI;AAC/D,cAAMC,YAAY,GAAGN,OAAO,CAACO,WAAR,GAAsBC,KAAtB,CAA4B,GAA5B,EAAiC,CAAjC,CAArB;AACA,eAAOH,IAAI,CAACE,WAAL,GAAmBE,QAAnB,CAA4BH,YAA5B,CAAP;AACH,OAHoB,CAArB;AAIA,aAAO,CAAC,GAAGzB,MAAM,CAACgB,UAAP,CAAkBI,cAAlB,CAAJ,CAAP;AACH,KANe,CAAhB;AAOH,GARD;;AAUA,sBACI,QAAC,YAAD,OAAkBZ,UAAlB;AAAA,2BACI,QAAC,aAAD;AAAA,6BACI,QAAC,MAAD;AAAA,gCACI,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,GAAZ;AAAgB,UAAA,OAAO,eAAE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAzB;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,UAAZ;AAAuB,UAAA,OAAO,eAAE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAhC;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CAjCD;;GAAMD,G;;KAAAA,G;AAmCN,eAAeA,GAAf","sourcesContent":["import { useState } from \"react\";\n\n// import styles of this component\nimport styles from \"./App.module.css\"\n\n// import other components to use\nimport Header from './Components/Header/Header';\nimport MasonryLayout from './Components/MasonryLayout/MasonryLayout';\nimport ContainerCard from './Components/ContainerCard/ContainerCard';\nimport Dropdown from './Components/Elements/Dropdown/Dropdown';\n\n// import json files \nimport images from \"./Jsons/Images.json\"\nimport { AuthProvider } from \"react-oidc-context\";\nimport { BrowserRouter, Route, Router, Routes } from \"react-router-dom\";\nimport Index from \"./Layouts/Index\";\n\n\n// App component\nconst App = () => {\n\n    const oidcConfig = {\n        authority: \"http://keycloak:8080/auth/realms/my_realm/\",\n        client_id: \"frontend_client\",\n        redirect_uri: \"http://localhost:3000/signin-callback.html\",\n        response_type: 'code',\n        scope: \"openid profile message.read\",\n    };\n\n\n    const [categoryImage, setCategoryImage] = useState(images.categories.all)\n\n    const takeDdTitle = (ddTitle) => {\n        setCategoryImage(() => {\n            let categoryChoose = Object.keys(images.categories).filter(item => {\n                const titleSplited = ddTitle.toLowerCase().split(\" \")[0]\n                return item.toLowerCase().includes(titleSplited)\n            })\n            return [...images.categories[categoryChoose]]\n        })\n    }\n\n    return (\n        <AuthProvider {...oidcConfig}>\n            <BrowserRouter>\n                <Routes>\n                    <Route path=\"/\" element={<Header />} />\n                    <Route path=\"/explore\" element={<Index />} />\n                </Routes>\n            </BrowserRouter>\n        </AuthProvider>\n    )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}